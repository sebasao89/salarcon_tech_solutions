---
// Props y configuración del navbar
const menuItems = [
  { id: '01', label: 'INICIO', href: '/', key: 'home' },
  { id: '02', label: 'SERVICIOS', href: '#services', key: 'services' },
  { id: '03', label: 'PORTFOLIO', href: '#portfolio', key: 'portfolio' },
  { id: '04', label: 'ACERCA DE', href: '/about', key: 'about' },
  { id: '05', label: 'CONTACTO', href: '#contact', key: 'contacts' }
];

const serviceItems = [
  { 
    label: 'DESARROLLO WEB Y APLICACIONES WEB', 
    href: '/services/desarrollo-web',
    key: 'desarrollo-web'
  },
  { 
    label: 'ASESORÍA EN INFRAESTRUCTURA Y TECNOLOGÍA', 
    href: '/services/asesoria-infraestructura',
    key: 'asesoria-infraestructura'
  },
  { 
    label: 'AUTOMATIZACIÓN DE PROCESOS', 
    href: '/services/automatizacion-procesos',
    key: 'automatizacion-procesos'
  },
  { 
    label: 'SISTEMAS DE SEGURIDAD Y CÁMARAS', 
    href: '/services/sistemas-seguridad',
    key: 'sistemas-seguridad'
  },
  { 
    label: 'DOMÓTICA Y HOGAR INTELIGENTE', 
    href: '/services/domotica-hogar',
    key: 'domotica-hogar'
  },
  { 
    label: 'REDES Y CONECTIVIDAD RESIDENCIAL', 
    href: '/services/redes-conectividad',
    key: 'redes-conectividad'
  }
];

const ctaButton = {
  label: 'ESCRIBENOS',
  href: '/contact'
};

const collaborateLink = {
  label: "LET'S COLLABORATE",
  href: '/collaborate'
};
---

<nav class="fixed top-0 left-0 right-0 z-50 bg-dark-500 border-b border-green-500/20 backdrop-blur-sm">
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    <div class="flex items-center justify-between h-16 md:h-18 lg:h-20">
      
      <!-- Logo -->
      <div class="flex-shrink-0">
        <a href="/" class="flex items-center hover:opacity-80 transition-opacity duration-300">
          <img 
            src="/logo/logo-h-transp.png" 
            alt="Salarcon Tech Solutions" 
            class="h-12 sm:h-14 lg:h-16 w-auto object-contain"
          />
        </a>
      </div>

      <!-- Tablet Menu (md to lg) -->
      <div class="hidden md:flex lg:hidden">
        <div class="flex items-center space-x-4">
          <!-- Compact tablet menu with dropdown for all items -->
          <div class="relative group">
            <button class="geist-mono text-white-500 hover:text-salmon-500 px-4 py-3 text-sm font-medium transition-colors duration-300 border border-green-500/20 rounded-lg hover:border-salmon-500 flex items-center touch-manipulation">
              MENÚ
              <svg class="ml-2 h-4 w-4 transition-transform duration-200 group-hover:rotate-180" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
              </svg>
            </button>
            
            <!-- Tablet Dropdown Menu -->
            <div class="absolute right-0 mt-2 w-72 bg-dark-500 border border-green-500/20 rounded-lg shadow-xl opacity-0 invisible group-hover:opacity-100 group-hover:visible transition-all duration-300 transform translate-y-2 group-hover:translate-y-0">
              <div class="py-3">
                {menuItems.map((item) => (
                  <a href={item.href} class="geist-mono block px-5 py-3 text-base text-white-500 hover:text-salmon-500 hover:bg-green-500/10 transition-colors duration-200 touch-manipulation">
                    {item.id} {item.label}
                  </a>
                ))}
                
                <!-- CTA in tablet dropdown -->
                <div class="px-5 pt-3 border-t border-green-500/20 mt-3">
                  <a href={ctaButton.href} class="geist-mono bg-salmon-500 hover:bg-salmon-500/80 text-white-500 block text-center px-6 py-3 text-sm font-medium rounded-lg transition-all duration-300 touch-manipulation">
                    {ctaButton.label}
                  </a>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>

      <!-- Desktop Menu (lg and up) -->
      <div class="hidden lg:block">
        <div class="ml-10 flex items-baseline space-x-6 xl:space-x-8">
          {menuItems.map((item) => (
            <a href={item.href} class="geist-mono text-white-500 hover:text-salmon-500 px-3 py-2 text-sm font-medium transition-colors duration-300 border-b-2 border-transparent hover:border-salmon-500 touch-manipulation">
              {item.id} {item.label}
            </a>
          ))}
        </div>
      </div>

      <!-- Call to Action Button (Desktop only) -->
      <div class="hidden lg:block">
        <a href={ctaButton.href} class="geist-mono bg-salmon-500 hover:bg-salmon-500/80 text-white-500 px-6 py-2 text-sm font-medium rounded-lg transition-all duration-300 transform hover:scale-105 hover:shadow-lg touch-manipulation">
          {ctaButton.label}
        </a>
      </div>

      <!-- Mobile menu button (small screens only) -->
      <div class="md:hidden">
        <button 
          id="mobile-menu-button"
          type="button" 
          class="geist-mono text-white-500 hover:text-salmon-500 focus:outline-none focus:text-salmon-500 transition-all duration-300 p-2 touch-manipulation hover:bg-green-500/10 rounded-lg hover:scale-105"
          aria-controls="mobile-menu" 
          aria-expanded="false"
        >
          <span class="sr-only">Abrir menú principal</span>
          <!-- Hamburger icon animado -->
          <div id="hamburger-container" class="relative w-6 h-6 transform transition-transform duration-300">
            <span id="hamburger-line-1" class="absolute left-0 top-1 w-6 h-0.5 bg-current transform transition-all duration-300 origin-center"></span>
            <span id="hamburger-line-2" class="absolute left-0 top-2.5 w-6 h-0.5 bg-current transform transition-all duration-300 origin-center"></span>
            <span id="hamburger-line-3" class="absolute left-0 top-4 w-6 h-0.5 bg-current transform transition-all duration-300 origin-center"></span>
          </div>
        </button>
      </div>
    </div>
  </div>

  <!-- Mobile menu -->
  <div id="mobile-menu" class="md:hidden hidden bg-dark-500 border-t border-green-500/20 transform transition-all duration-300 ease-in-out translate-y-[-10px] opacity-0">
    <div class="px-2 pt-2 pb-3 space-y-1">
      {menuItems.map((item) => (
        <a href={item.href} class="geist-mono text-white-500 hover:text-salmon-500 block px-3 py-2 text-base font-medium transition-colors duration-300">
          {item.id} {item.label}
        </a>
      ))}
      
      <!-- Mobile CTA -->
      <div class="pt-4 pb-2">
        <a href={ctaButton.href} class="geist-mono bg-salmon-500 hover:bg-salmon-500/80 text-white-500 block text-center px-6 py-3 text-sm font-medium rounded-lg transition-all duration-300 mx-3">
          {ctaButton.label}
        </a>
      </div>
      
      <!-- Mobile Collaboration Link -->
      <div class="pt-2 border-t border-green-500/20 mt-4">
        <a href={collaborateLink.href} class="geist-mono text-blue-500 hover:text-salmon-500 block px-3 py-2 text-sm transition-colors duration-300">
          → {collaborateLink.label}
        </a>
      </div>
    </div>
  </div>
</nav>

<script>
  // Mobile menu toggle
  const mobileMenuButton = document.getElementById('mobile-menu-button');
  const mobileMenu = document.getElementById('mobile-menu');
  const hamburgerContainer = document.getElementById('hamburger-container');
  const hamburgerLine1 = document.getElementById('hamburger-line-1');
  const hamburgerLine2 = document.getElementById('hamburger-line-2');
  const hamburgerLine3 = document.getElementById('hamburger-line-3');
  


  if (mobileMenuButton && mobileMenu) {
    mobileMenuButton.addEventListener('click', () => {
      const isExpanded = mobileMenuButton.getAttribute('aria-expanded') === 'true';
      
      if (isExpanded) {
        // Cerrar menú - animar hacia hamburguesa
        mobileMenu.classList.add('translate-y-[-10px]', 'opacity-0');
        setTimeout(() => {
          mobileMenu.classList.add('hidden');
        }, 300);
        
        // Transformar X a hamburguesa
        hamburgerLine1?.classList.remove('rotate-45', 'translate-y-1.5');
        hamburgerLine2?.classList.remove('opacity-0');
        hamburgerLine3?.classList.remove('-rotate-45', '-translate-y-1.5');
        hamburgerContainer?.classList.remove('rotate-180');
      } else {
        // Abrir menú - animar hacia X
        mobileMenu.classList.remove('hidden');
        setTimeout(() => {
          mobileMenu.classList.remove('translate-y-[-10px]', 'opacity-0');
        }, 10);
        
        // Transformar hamburguesa a X
        hamburgerLine1?.classList.add('rotate-45', 'translate-y-1.5');
        hamburgerLine2?.classList.add('opacity-0');
        hamburgerLine3?.classList.add('-rotate-45', '-translate-y-1.5');
        hamburgerContainer?.classList.add('rotate-180');
      }
      
      // Update aria-expanded
      mobileMenuButton.setAttribute('aria-expanded', (!isExpanded).toString());
    });
  }



  // Close mobile menu when clicking on a link
  const mobileMenuLinks = mobileMenu?.querySelectorAll('a');
  mobileMenuLinks?.forEach(link => {
    link.addEventListener('click', () => {
      // Animar cierre del menú
      mobileMenu?.classList.add('translate-y-[-10px]', 'opacity-0');
      setTimeout(() => {
        mobileMenu?.classList.add('hidden');
      }, 300);
      
      // Transformar X a hamburguesa
      hamburgerLine1?.classList.remove('rotate-45', 'translate-y-1.5');
      hamburgerLine2?.classList.remove('opacity-0');
      hamburgerLine3?.classList.remove('-rotate-45', '-translate-y-1.5');
      hamburgerContainer?.classList.remove('rotate-180');
      
      mobileMenuButton?.setAttribute('aria-expanded', 'false');
    });
  });

  // Close mobile menu when clicking outside
  document.addEventListener('click', (event) => {
    const navbar = document.querySelector('nav');
    if (navbar && !navbar.contains(event.target as Node)) {
      // Animar cierre del menú
      mobileMenu?.classList.add('translate-y-[-10px]', 'opacity-0');
      setTimeout(() => {
        mobileMenu?.classList.add('hidden');
      }, 300);
      
      // Transformar X a hamburguesa
      hamburgerLine1?.classList.remove('rotate-45', 'translate-y-1.5');
      hamburgerLine2?.classList.remove('opacity-0');
      hamburgerLine3?.classList.remove('-rotate-45', '-translate-y-1.5');
      hamburgerContainer?.classList.remove('rotate-180');
      
      mobileMenuButton?.setAttribute('aria-expanded', 'false');
    }
  });
</script>